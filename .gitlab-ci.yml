image: node:10

cache:
  paths:
  - node_modules/

stages:
- build
- test
- codeclimate
- release
- deploy

## Release
.release: &release_template
  stage: release
  before_script:
  - apt-get update -qq && apt-get install -y git openssh-client
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - git config user.email "jeffreyvannorden@gmail.com"
  - git config user.name "CI Jeffrey"
  - git checkout -B $CI_COMMIT_REF_NAME
  - git remote remove ssh || true
  - git remote add ssh ssh://git@gitlab.com/${CI_PROJECT_PATH}.git
  - git pull ssh $CI_BUILD_REF_NAME
  script:
  - 'npm version ${version_type} -m "[release]: Releasing v%s"'
  - git push ssh master --tags
  only:
  - master
  except:
    refs:
    - tags
    variables:
    - $CI_COMMIT_TITLE =~ /^\d+\.\d+\.\d+$/
    - $CI_COMMIT_MESSAGE =~ /\[release\]|\[bump\]/
  services: []
  when: manual
  allow_failure: false
  after_script: []

Release Patch Version:
  <<: *release_template
  when: always
  variables:
    version_type: patch

Push release to Docker:
  image: docker:latest
  stage: release
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  after_script:
  - docker logout $CI_REGISTRY
  services:
  - docker:dind
  script:
  - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" .
  - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
  only:
  - tags
